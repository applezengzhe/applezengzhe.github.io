<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>骁龙410随身WiFi刷入Debian 系统和救砖教程</title>
    <url>/2024/12/22/1/</url>
    <content><![CDATA[驱动与Debian所需文件

高通 9008 驱动
ADB 工具
Miko 备份工具
Debian 刷机包
备份的全量包如果不确定下载哪个，请先查看板子型号再下载刷机包。

1.查看板子型号用螺丝刀将随身 WiFi 的外壳拆开，查看板子上方的丝印，型号一般以 UFI、UZ 或 SP 开头。如红框中所示，此型号是 UFI003。
2.安装 9008 驱动执行 driver.exe，并点击立即安装。在弹出如下窗口中，点击“安装”。
3.安装 ADB 工具解压 platform-tools_r34.0.5-windows.zip
4.打开命令提示符，执行 adb version。如果出现

Android Debug Bridge version 1.0.41
Version 34.0.5-10900879即为正确

5.安装 Miko 备份工具解压 MiKo_Loder Pro.zip，运行 miko.exe 安装备份工具。安装完成后，桌面上会出现 Miko 备份工具的快捷方式。在图标上右键，打开文件所在位置，将解压得到的 Loader.exe 复制到 Miko 安装目录即可。
开启 ADB1.将随身 WiFi 插入电脑 USB 接口。打开设备管理器，如果此时多了一个名叫 Android Composite ADB Interface 的设备，则表明随身 WiFi 已经开启 ADB，无需执行其他操作。如果没有出现这个设备，则需要手动开启 ADB。以 UZ801 型号为例，连上随身 WiFi 的热点，并访问 http://192.168.100.1/usbdebug.html 即可开启 ADB，再次访问即可关闭。

提示
部分 UFI003 型号的随身 WiFi 默认不开 ADB，需要手动进 9008 模式刷入已开启 ADB 的安卓固件。
固件下载

2.手动进 9008 模式的方法：按住 reset 键不放（随身 WiFi 背面二维码右上角的小孔，用取卡针或牙签戳即可），并将随身 WiFi 插入电脑，松开 reset 键。
3.备份原厂固件为避免刷错固件变砖等情况，强烈建议备份原厂固件。
4.打开命令提示符，执行 
adb reboot edl
，此时设备管理器中会多出高通 9008 设备。
5.我们运行上文所提到的 Loader.exe（即 Miko 工具）进行备份数据。
6.此时窗口右侧显示设备信息，表明随身 WiFi 已被成功识别。如果显示 Not Found 字样，请重新安装 9008 驱动并再次尝试。
7.依次点击 Read –&gt;Partition Backup&#x2F;Erase–&gt;Load Partition Structure。然后双击红色 Option 下面的灰条，选择备份目录，并点击 Read Full Image。再次选择备份目录，并取一个文件名，点击确定，即可开始备份。
8.等待几分钟，直到进度条达到 100%，右侧输出 Sucess 字样和用时，则表明备份完成 。
9.如果需要恢复备份，依次点击 Flash –&gt;emmc block0 flasher。然后双击 Emmc Data，选择之前备份的文件（.bin 格式），并点击下方 Flash 按钮，等待刷机完成即可。
刷入 Debian1.拔掉随身 WiFi 并重新插入 USB 接口，解压 Debian 刷机包。打开命令提示符，执行 adb reboot bootloader 进入 fastboot 模式。运行刷机包中的 flash.bat刷入系统，等待刷机完成。输出 all done! 则表明刷机完成。
2.安装 RNDIS 网络驱动

提示
如果设备管理器只显示 Android Device，右键更新驱动程序，依次选择 Microsoft - USB 移动宽带网络适配器，然后重新插入随身 WiFi，会出现一个未知设备，再根据下述步骤进行操作。
重新插入随身 WiFI，打开任务管理器，在其他设备中会出现一个未知设备或以 RNDIS 开头的设备。

3.右键，更新驱动程序–&gt;浏览我的电脑以查找驱动程序–&gt;让我从计算机上的可用驱动程序列表中选取–&gt;显示所有设备，等待列表加载完成。
4.左侧选择 Microsoft，右侧选择 基于远程 NDIS 的 Internet 共享设备，在弹出窗口中选择是，并确定。至此，RNDIS 驱动安装成功。
连接随身 WiFi 终端1.驱动安装成功后，电脑上会多出一个名叫 4G_UFI_123456 的 NDIS 设备，同时会出现一个同名的热点，密码为 12345678。
2.Debian 默认用户名为 user，密码为 1，root 密码也为 1。请务必及时修改密码（命令：passwd）。
3.此时可以通过 adb 或 ssh 连接到 Debian 终端。
4.通过 adb 连接将随身 WiFi 插入电脑 USB 接口，使用以下命令查看已连接 adb 设备：

adb devices
List of devices attached
0123456789 device

5.有新设备出现时，使用以下指令进入 
adb shell

6.通过 adb 连接时，使用 nmtui、htop 等需要显示图形的命令，可能会出现如下错误：root@openstick:&#x2F;# nmtuiTERM environment variable needs set.设置 TERM 环境变量即可解决。
export TERM=linux

通过 ssh 连接1.将随身 WiFi 插入电脑 USB 接口或连接上随身 WiFi 的热点，使用以下指令进行连接：
ssh root@192.168.68.1
如果连不上说明系统还在启动，请稍后再试。
随身 WiFi 联网此时随身 WiFi 并没有联网，必须要关闭热点才能连接 WiFi。下面介绍详细步骤。
1.首先打开命令提示符，执行 adb shell 进入 Debian 终端。然后设置 TERM 环境变量：export TERM&#x3D;linux。
2.执行 nmtui，选择“编辑连接”。
3.左侧使用方向键选择 bridge，右侧选择“编辑”。并回车。
4.删除其中的 wifi，并选择确定。。
5.返回，选择启用连接，则可连接 WiFi。
优化系统1.删除无效软件包仓库
rm -rf /etc/apt/sources.list.d/*

2.删除多余软件包
apt autopurge -y adoptopenjdk-8-hotspot

3.更换软件源
cat &lt;&lt;EOF&gt; /etc/apt/sources.listdeb http://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free# deb-src http://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-freedeb http://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free# deb-src http://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free#deb http://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free# deb-src http://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-freedeb http://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free# deb-src http://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-freeEOF

4.更新软件包
apt update &amp;&amp; apt upgrade -y

5.安装常用软件包
apt install -y nano curl

6.删除软件包缓存
apt clean
安装1Panel面板并换docker源(可选)1.输入安装命令
curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh
2.根据提示输入安装位置，账号密码，端口号和安全入口
3.输入随身wifi IP:端口号&#x2F;安全入口，然后输入密码进入
4.点击应用市场&#x3D;&gt;已安装&#x3D;&gt;配置镜像加速可以解决镜像拉取失败的问题 快速跳转
5.根据提示配置镜像源
　
关闭 LED 灯（可选）1.随身 WiFi 开机后，LED 灯会不停地闪烁，如果不喜欢的话，执行以下命令即可关闭。
echo none &gt; /sys/class/leds/blue:wifi/triggerecho none &gt; /sys/class/leds/red:os/trigger
执行后会立即生效。为避免重启后失效，建议设置开机自动执行。
2.编辑 &#x2F;etc&#x2F;rc.local 文件，并将以上两行命令添加到 exit 0 之前，并保存。-
救砖1.变砖后的棒子接入电脑直接进入9008模式,（如果没有可以尝试拆机按住reset键不动，再接入电脑）:
2.打开miko，分别点击Flash&gt;emmc block0 flasher&gt; Emmc Data&gt;FLASH!如下选择就可以全量刷了，我当时用这个连分区表都恢复了
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>救砖</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>通过 cloudflare tunnel 免费内网穿透并免费国内加速访问</title>
    <url>/2025/08/24/10/</url>
    <content><![CDATA[准备
Cloudflare账号(必须)
一个域名(推荐NameSilo(购买)(必须)
github账号(非必须)
edgeone账号可以通过x发推文或测速获得免费套餐，也可以买一个月付费，到期后变免费(非必须)
vercel账号(非必须)
Netlify账号与Nodejs(非必须)

cloudflare tunnel配置1.先在绑定自己购买的域名
2.在域名绑定完成后在cloudflare主页点击Zero Trust
3.进入后先随便取个名字，之后选择免费计划,之后点继续
4.在选择付款方式页面直接回到cloudflare主页，之后再点Zero Trust
5.进入后一次点击Networks&#x3D;&gt;Tunnels&#x3D;&gt;Add a tunnel&#x3D;&gt;cloudflared&#x3D;&gt;next
6.然后为隧道起个名字,之后点Save tunnel，然后根据自己的系统安装cloudflared,完成后点击next
7.在当前页面填写自己要穿透后访问的域名,和内网的服务协议与ip+端口
免费国内加速访问
在成功配置cloudflare tunnel后你会发现国内访问很慢，这是应为cloudflare tunnel国内CDN很少，这时可以优选ip或cdn解决

方法一 cloudflare优选IP1.进入cloudflare主页后点击Workers&#x3D;&gt;Workers 和 Pages
2.点击创建&#x3D;&gt;从 Hello World! 开始&#x3D;&gt;部署&#x3D;&gt;编辑代码,写入:
addEventListener(  &quot;fetch&quot;,event =&gt; &#123;     let url=new URL(event.request.url);     url.hostname=&quot;example.com&quot;;  //你的Cloudflare tunnel填写的域名     let request=new Request(url,event.request);     event. respondWith(       fetch(request)     )  &#125;)

3.之后点击设置，在域和路由点击添加，选择路由，区域选你的域名，路由写你以后要访问的域名，格式:
example.com/*

4.之后在Cloudflare主页点击你的域名，再点DNS,填写记录，添加一个DNS解析写你路由绑定的域名cname到cf.090227.xyz(社区优选域名)，之后就可以访问这个域名访问你的本地服务了
方法二 Netlify反代网站1.在Github开一个新仓库，根目录创建一个 netlify.toml。在其中写入
[[redirects]]  from = &quot;/*&quot;  to = &quot;https://cloudflare tunnel域名/:splat&quot;  status = 200  force = true

注意，端口后面的斜杠一定不要丢！

2.接下来回到 https://app.netlify.com/ 创建一个新项目，导入你刚创建的Github项目，部署即可 最后绑定一下你的域名，就可以通过此域名访问你的内网服务了
方法三 Vercel反代网站1.电脑安装Nodejs，我们需要用到npm 安装Vercel CLI
npm i -g vercel

2.登录Vercel CLI
vercel login

3.找个地方（比如桌面）创建一个你随意命名的文件夹，然后在其中创建一个你随意命名的.json文件，其中写入:
&#123;    &quot;version&quot;: 2,    &quot;routes&quot;: [      &#123;&quot;src&quot;: &quot;/(.*)&quot;,&quot;dest&quot;: &quot;https://cloudflare tunnel域名&quot;&#125;    ]&#125;

4.然后部署
verceL -A 你命名的.json --prod

5.最后绑定一下你的域名，就可以通过此域名访问你的内网服务了
方法四 edgeone反代网站1.在edgeone主页新增站点，添加自己的域名，选择免费服务
2.进入后点击域名配置&#x3D;&gt;域名管理，添加域名，域名配置填写自己以后访问的域名，源站配置写cloudflare tunnel域名 回源 HOST 头选使用源站域名
3.之后在Cloudflare添加cname记录，等部署完后点击HTTPS 配置选申请免费证书&#x3D;&gt;确定
4.等部署完后，就可以通过此域名访问你的内网服务了
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>共享</tag>
      </tags>
  </entry>
  <entry>
    <title>OPPO/真我手机 MTK强解BL锁</title>
    <url>/2024/12/22/2/</url>
    <content><![CDATA[
我手上的手机是oppo reno5 pro，警告提前备份数据，一但变砖，本人概不负责

资源与文件
123盘 提取码:1213
dm模块(用于部分机型关闭dm校验)

准备工作：1.安装python环境（Download Python | Python.org）记得勾选Add Python X.X to PATH
2.必要驱动
3.安装强解工具mtkclient
4.手机一定要降级到c11，因为c12及以后封了强解端口，不过好像可以拆机开端口，不过本人没有测试
mtkclient配置：1.进入解压后的mtkclient文件夹
2.在此文件夹打开powershell
3.换清华或其他源（不一定，但会更快一些）：
pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple

4.安装mtkclient需要的第三方库：
pip install -r requirements.txt

解锁bl锁：解锁安卓10以下设备的bl锁：1.先将设备关机
2.在powershell里输入：
python mtk da seccfg unlock

3.按住电源键+音量上下键，进入深刷模式，第一次会自动安装驱动，等待进度条完毕
4.如果重启出现：

Your device has been unlocked and can’t be trusted.
Your device will boot in 5 seconds.就解锁完毕

5.此时可能无法启动手机，一直让它开机进入rec模式（大约半个小时），如果不行手动进入rec模式
6.直接清除数据分区，然后重启
解锁安卓11以上设备bl锁：1.备份lk（因为安卓11之后有dm校验，又把它藏在了lk分区里）：
python mtk r lk,lk2 lk.bin,lk2.bin
（网上看自己有几个lk分区，不要找着抄）
2.备份后自己重名后缀，例如我有两个lk分区：lk.base,lk2.base
3.下载我提供的lk文件
4.刷入我提供的lk文件
python mtk w lk,lk2 lk.bin,lk.bin

5.强解bl锁：
python mtk da seccfg unlock

6.此时你可能像我手机变成一块黑砖，不用慌，输入
python mtk w lk,lk2 lk.base,lk2.base

刷如原厂lk文件，重新按住电源键+音量上+音量下，等到重新进入深刷模式
7.按一下电源键 如果看到了

Your device has been unlocked and can’t be trusted.
Your device will boot in 5 seconds.就成功了，不过之后重启可能像我的手机一样要再按一次电源键

8.此时可能无法启动手机，一直让它开机进入rec模式（大约半个小时，如果不行手动进入rec模式
9.清除数据分区，然后重启
Root手机：1.重新进入深刷模式，输入
python mtk r boot boot.img

提取boot分区，因为boot分区不对可能会掉wifi
2.安装面具
3.修补boot镜像，不要开修补vbmeta
4.重新进入深刷模式，输入
python mtk w boot 你修补的镜像

5.不出意外应当后成功root了(如果升级c12，可以用官方升级工具，之后找到升级包，获得boot，修补之后fastbootd刷入)
五.去除dm检验1.用软件提取vbmeta.img2.进入fastbootd 之后输入:
fastboot --disable-verity --disable-verification flash vbmeta vbmeta.img

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>强解</tag>
        <tag>Root</tag>
        <tag>安卓</tag>
      </tags>
  </entry>
  <entry>
    <title>安装搭建Hexo博客在Github Pager和Cloudflare并更换主题 完整指南</title>
    <url>/2024/12/22/3/</url>
    <content><![CDATA[准备软件准备
Github账号(必须)
Cloudflare账号(必须)
Node(必须)
Git(必须)
VSCode（建议,非必须）

检查1.在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明Node安装成功。
2.Node换华为源(会快一点)：
npm config set registry https://mirrors.huaweicloud.com/repository/npm/
正式配置配置 Git 密钥并连接至 Github1.配置用户名和邮箱
git config --global user.name &quot;你的用户名&quot;git config --global user.email &quot;你的邮箱&quot;
之后通过通过以下命令检查是否配置成功
git config -l 

2.配置公钥连接Github
ssh-keygen -t rsa -C &quot;你的邮箱&quot;

3.用记事本打开上述图片中的公钥id_rsa.pub，复制里面的内容，然后开始在github中配置ssh密钥。
4.进入github，点击右上角头像 选择settings，进入设置页后选择 SSH and GPG keys，名字随便起，公钥填到Key那一栏。
5.测试连接，输入以下命令（不要开stam++连接）
ssh -T git@github.com

第一次连接会提示Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?，输入yes即可出现连接到账户的信息，说明已经大功告成。
创建GitHub.io仓库1.点击右上角的+按钮，选择New repository，创建一个&lt;用户名&gt;.github.io的仓库。
2.仓库名字的格式必须为：&lt;用户名&gt;.github.io (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)
3.可见性必须选择 Public 方便第一次部署检查问题，点击 Creat repository 进行创建即可
初始化 Hexo 博客1.创建一个文件夹来保存博客源码（我这里选的路径为D:&#x2F;Hexo-Blog），在文件夹内右键鼠标，选择Open Git Bash here
2.在Git BASH输入如下命令安装 Hexo
npm install -g hexo-cli &amp;&amp; hexo -v
安装完后输入hexo -v验证是否安装成功。
3.初始化 Hexo 项目安装相关依赖。
hexo init blogcd blognpm i

4.输入
hexo cl &amp;&amp; hexo s
启动项目,打开浏览器，输入地址：http://localhost:4000 当看到网站，就成功了
将静态博客挂载到 GitHub Pages1.安装 hexo-deployer-git
npm install hexo-deployer-git --save

2.修改 _config.yml 文件在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为main代表主分支（注意缩进）。
deploy:  type: git  repository: git@github.com:applezengzhe/applezengzhe.github.io.git  branch: main

3.修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）
hexo cl&amp;&amp;hexo g&amp;&amp;hexo d
如果出现Deploy done，则说明部署成功了。稍等两分钟，打开浏览器访问：https://applezengzhe.github.io ，这时候我们就可以看到博客内容了。
更换主题1.打开https://hexo.io/themes/找到喜欢的主题打开github根据教程clone主题，或者将主题下载到本地hexo主题文件夹中进行使用。
2.以particlex为例
cd themesgit clone https://github.com/theme-particlex/hexo-theme-particlex.git particlex --depth=1

3.然后在根目录 _config.yml 设置主题为 ParticleX 即可。

theme: particlex

部署到Cloudflare Workers 和 Pages上1.登录Cloudflare后进入控制台页面
2.点击Workers 和 Pages然后创建应用程序
3.点击Pages，然后点击连接到 Git
4.输入你的github账号和密码，然后选择Hexo的仓库
5.构建配置中的构建命令输入
hexo cl&amp;&amp;hexo g&amp;&amp;hexo d

6.之后进入你创建的worker，点击自定义域名(要绑定在Cloudflare上的)(可选)
7.最后你就可以国内更稳定访问你的博客了，拜拜!!!(。・∀・)ノ
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>gmg光猫开Telnet,获得超级管理员密码,改桥接</title>
    <url>/2024/12/31/4/</url>
    <content><![CDATA[记录关键参数1.从WAN设置页，记下拨号帐号
2.如果不知道拨号密码可以问师傅或去移动官网改密码
3.WAN设置里INTERNET一项对应的VID
4.ONT认证密码。在登录页面右键，浏览页面源代码，搜索 LOID，把var pwd &#x3D; “——————“;记录下来
获取管理员密码
谨慎操作，很容易无法上网，如不能接受请退出

1.捅光猫复位键，45～60秒。
2.打开登录页面，用管理员帐号CMCCAdmin和初始密码aDm8H%MdA登录进去。
3.在登陆光猫后在此页面 开启telnet，保存
4.退出登录，到主页“注册安装”，填入ONT密码，操作业务下发
5.下发完成后，现在可以正常上网了
6.使用windows自带的telnet或其他telnet工具连接到光猫，登录用户CMCCAdmin，密码输入光猫反面写的user密码加上@C1，如xxxxxxxx@C1。（如果不对请尝试省份首字母，比如@BJ）待出现~$符号后，输入sidbg 1 DB p DevAuthInfo，超级密码一目了然。
设置桥接
部分地区可能需要删掉TR069才能正常使用，用F12法或者TELNET指令法。请自行删除。

1.打开光猫网络标签页
2.在连接名称选择Internet_XXX这一项
3.点击删除
4.重新添加一个 Inetrnet
5.IP协议版本选择 IPv4&#x2F;v6
6.模式选择 桥接
7.端口绑定选择需要的LAN口
8.VLAN ID 填写之前抄
9.点击保存
设置路由器1.加入路由器后台
2.点击网络
3.写入自己的拨号账号和密码
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>光猫</tag>
        <tag>网络</tag>
        <tag>桥接</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑安装Android X86和Windows双系统</title>
    <url>/2025/01/22/5/</url>
    <content><![CDATA[准备工作文件准备
Android X86镜像获取
刷写工具ventoy
分区工具DiskGenius
Android X86引导 Grub2Win
AutoUpdate

软件准备1.将下载后的ventoy解压，然后点击Ventoy2Disk.exe(记得插入U盘)，然后点击安装
2.在进度条走完后，将下载后的Android X86进入拖入U盘
3.打开DiskGenius，分出一块空间给安卓系统使用(建议大于20G)
4.解压GrubWin后双击安装
5.如果安装不成功把AutoUpdate后缀名改为7z，解压并点击setup.bat
6.之后安装GrubWin
正式教程使用U盘安装Android X86系统1.进入本机的BIOS(如果你这个不知道建议退出本教程),改为U盘启动
2.重启进入U盘后，选择第一项可以先试用安卓系统，如果行再进行小一步
3.重新启动后选择第三项，进行安装
4.选择你专门分给安卓的分区,然后选择ntfs的格式化并确认
5.选择安装GRUB(双系统启动项),如果出现Warning，再次选择Yes(之后在Windows解决启动问题)
6.下一步是root(发烧友都懂)，选择Yes，方便安装arm兼容库
7.之后等一俩分钟,之后选择Yes，创建空间存储用户数据，按照你之前分区空间的储存输入安卓的储存空间
8.然后选择Reboot
创建Android X86引导1.打开GrubWin，点击Manage Boot Menu
2.点击Add A New Entry(添加启动项)
3.Type选择android，Select A New Kernel File选择安卓分区中的android-XX-XX文件夹中的kernel并选择
4.把安卓启动项改为第二个
配置Android X861.重启后选择安卓的启动项
2.先改ENGLISH语言为简体中文，然后选择中国
3.点击开始，然后连接网络，台式机不用配置继续
4.检查更新等它自己过，然后选择使用新设置，再设置你的时区，下一步，同意
5.点击Launcher3桌面并设置始终
安装Android X86 arm兼容库1.点击设置，开启兼容选项
2.打开终端模拟器输入
suenable_nativebridge

3.等待下载完毕
4.总结Android X86兼容性不是很好，可以安装一下电视软件玩玩，但还不如安卓模拟器，未来可期
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>安卓</tag>
      </tags>
  </entry>
  <entry>
    <title>广东爱家TV(E900V22C-b)刷入ATV</title>
    <url>/2025/01/22/6/</url>
    <content><![CDATA[准备工作
ATV固件提取码:1213，E900V22C-a或b都可以
一个U盘

刷机1.把ATV固件放入U盘根目录
2.打开电视盒子并遥控器狂按右键
3.不出意外的话你的电视就开始升级了
优点1.自带root2.不杀后台
问题1.由于是移动端移植，不支持语音和一些按键不支持2.wifi adb 需要拔网线连接wifi，不那么好用
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>安卓</tag>
        <tag>TV</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑如何重装Windows系统</title>
    <url>/2025/01/23/7/</url>
    <content><![CDATA[准备工作文件
bt下载器qbittorrent增强版
windwos镜像msdn，hellowindwos
微PE
你的Windwos驱动，自己去官网找(如果找不到就可以安装驱动安装软件，如:驱动人生，但下载一般较慢，还可能不适配)

软件准备1.安装qbittorrent后复制windwos镜像站的bt下载链接下载
2.在插入U盘，打开微PE安装，安装成功后Windwos镜像拖入U盘
3.重启电脑进入bios(如果不知道可以去网上查查，一般为Delete)
4.设置U盘为第一启动项
5.重启进入微PE，后打开DiskGenius，进行分区然后创建ESP&#x2F;MSR分区，如果有就不用了
6.打开Dism++，恢复功能&#x3D;&gt;还原系统，目标镜像路径为你的Windwos镜像，然后选择你的目标镜像版本，安装位置选你分的区域，记得勾选格式化，Compact，添加引导
7.引导为你的ESP分区
8.之后拔U盘重启应该就可以了进入系统，然后自己进行配置
9.进入系统后打开你的驱动文件，进行安装
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>rax3000m 刷机以及救砖</title>
    <url>/2025/07/14/8/</url>
    <content><![CDATA[前言由于这款机子经过多次优化，而且有多个版本需要不通的方法刷入uboot，所以我将分不同的版本来写，可自行跳转至自己的版本刷入uboot
确认版本一.判断自己是EMMC还是NAND
1.看自己机子的背面，如果有CH  EC那就是EMMC版，而如果只有CH那就是NAND版（当然也不绝对，但大多数是这样）
2.如果你不放心，可以拆开，其中两螺丝钉在背面标签的左下角与右下角，拧下后看PCB号

128M SPI-NAND版（PCB号：RAX3000M_D4_PCB_P3，生产批次20230515, 20230606 和 20231027）
64G EMMC版（PCB号：RAX3000M_D4_SL_P1，生产批次20230626）

二.看生产日期
1.如果为 20230606及以前则没有加密
2.如果为 20230606到20240115则已经加密
3.如果为 20240115或202401017则需要特别的方法
不同版本进入终端方法20230606及以前 和 20230606到20240115进入终端一.进入网页端管理页面中点击更多，然后再点击管理页面
二.点击配置管理并点击导出文件来来下载 cfg_export_config_file.conf
三.上传文件到 Linux系统（WSL）也可以
四.解压配置文件

如果你是20230606及以前生产的，在linux命令行输入
tar -xvzf cfg_export_config_file.conf 

如果你是20230606到20240115生产的，在linux命令行输入
openssl aes-256-cbc -d -pbkdf2 -k $CmDc#RaX30O0M@\!$ -in cfg_export_config_file.conf -out - | tar -zxvf -
然后你将要获得一个etc文件夹


五.修改配置文件1.在命令行输入
vi /etc/shadow
2.然后在第一行的root后面删除两个冒号（以在ssh进入系统时不用root密码）让后按照按Esc，之后按: 输入
wq!
回车保存
2.1.在命令行输入
vi /etc/config/dropbear
在第二行把option enaber ‘0’ 改为option enaber ‘1’ 保存，开启ssh
六.重新加密配置文件

如果你是20230606及以前生产的，在linux命令行输入
tar -zcvf  cfg_export_config_file_new.conf etc

如果你是20230606到20240115生产的，在linux命令行输入
tar -zcvf - etc | openssl aes-256-cbc -pbkdf2 -k $CmDc#RaX30O0M@\!$ -out cfg_export_config_file_new.conf
七.导入配置并进入ssh1.回到配置管理并点击导入配置文件，将我们的cfg_export_config_file_new.conf文件上传，之后就可以使用mobaxterm点击Session，然后点击SSH，在Remote host *中输入192.168.10.1(rax000m的ip)，Specify username中输入root，在点击ok，即可进入ssh


20240115 进入终端
由于机子是新固件，新密码是根据SN生成的，所以每台机子不一样，而且新版原厂固件已经删除了dropbear，开不了SSH，所以我们将使用telnet的配置备份文件一.进入网页端管理页面中点击更多，然后再点击管理页面

二.点击配置管理并点击导出文件来来下载 cfg_export_config_file.conf
三.使用openwrt、ubuntu、WSL等linux系统或Cygwin
四.输入在文件所在的目录打开命令窗口输入
SN=123456789123456(在机子背面S/N:后的)mypassword=$(openssl passwd -1 -salt aV6dW8bD &quot;$SN&quot;)mypassword=$(eval &quot;echo $mypassword&quot;)echo $mypasswordopenssl aes-256-cbc -pbkdf2 -k &quot;$mypassword&quot; -in RAX3000M_XR30_cfg-telnet-20240117.conf -out cfg_import_config_file_new.conf

五.导入配置并进入ssh1.回到配置管理并点击导入配置文件，将我们的cfg_export_config_file_new.conf文件上传，之后就可以使用mobaxterm点击Session&#x3D;&gt;Telnet，在Remote host *中输入192.168.10.1(rax000m的ip)，Specify username中输入root，在点击ok，即可进入ssh
20241017 ttl进入终端其他版本也通用1.准备 

TTL转USB调试工具
相对应的驱动（不一定要驱动）
PUTTY

2.将在背面标签的左下角与右下角的两螺丝钉拧下，然后打开
3.然后你会看到 
4.在PUTTYputty选择serial，serial lan（端口）填写就填你在设备管理端口里看到的（此电脑右键点击管理&#x3D;&gt;设备管理器&#x3D;&gt;端口），speed填115200，之后点击open
5.在显示root@(none)后输入
mount_rootsed -i &#x27;s/.*local debug=.*/\tlocal debug=1/&#x27; /etc/init.d/telnet

6.之后输入
passwd root
改密码
6.接着写你要的root密码因为是linux所以不显示你输入的密码
7.之后就可以使用mobaxterm点击Session&#x3D;&gt;Telnet，在Remote host *中输入192.168.10.1(rax000m的ip)，Specify username中输入root，在点击ok，密码写你自己设置的，即可进入ssh
备份
如果为emmc 输入命令
dd if=/dev/mmcblk0p1 of=/mnt/mmcblk0p12/mmcblk0p1.bindd if=/dev/mmcblk0p2 of=/mnt/mmcblk0p12/mmcblk0p2.bindd if=/dev/mmcblk0p3 of=/mnt/mmcblk0p12/mmcblk0p3.bindd if=/dev/mmcblk0p4 of=/mnt/mmcblk0p12/mmcblk0p4.bindd if=/dev/mmcblk0p5 of=/mnt/mmcblk0p12/mmcblk0p5.bindd if=/dev/mmcblk0p6 of=/mnt/mmcblk0p12/mmcblk0p6.bindd if=/dev/mmcblk0p7 of=/mnt/mmcblk0p12/mmcblk0p7.bindd if=/dev/mmcblk0p8 of=/mnt/mmcblk0p12/mmcblk0p8.bindd if=/dev/mmcblk0p9 of=/mnt/mmcblk0p12/mmcblk0p9.bindd if=/dev/mmcblk0p10 of=/mnt/mmcblk0p12/mmcblk0p10.bindd if=/dev/mmcblk0p11 of=/mnt/mmcblk0p12/mmcblk0p11.bin
然后复制拖到电脑，进行备份文件

如果为nand 输入
dd if=/dev/mtd0 | gzip &gt;/tmp/mtd0_spi0.0.bin.gzcd  /tmp  进入到tmp目录把 mtd0_spi0.0.bin.gzrm  -rf  mtd0_spi0.0.bin.gz dd if=/dev/mtd1 of=/tmp/mtd1_BL2.bindd if=/dev/mtd2 of=/tmp/mtd2_u-boot-env.bindd if=/dev/mtd3 of=/tmp/mtd3_Factory.bindd if=/dev/mtd4 of=/tmp/mtd4_mtd4_FIP.bindd if=/dev/mtd5 of=/tmp/mtd5_ubi.bindd if=/dev/mtd6 of=/tmp/mtd6_plugins.bindd if=/dev/mtd7 of=/tmp/mtd7_fwk.bindd if=/dev/mtd8 of=/tmp/mtd8_fwk2.bin
然后复制拖到电脑，进行备份文件


安装Uboot1.下载Hanwckf的uboot并解压

nand留下mt7981_cmcc_rax3000m-fip-fixed-parts.bin

emmc留下mt7981_cmcc_rax3000m-emmc-fip.bin


2.将文件上传到&#x2F;tmp路径然后nand输入
mtd write /tmp/mt7981_cmcc_rax3000m-fip-fixed-parts.bin
而emmc输入
dd if=/tmp/mt7981_cmcc_rax3000m-emmc-fip.bin of=/dev/mmcblk0p3sync

特别提醒，如果报错了千万不要重启，不然砖一个给你看看，马上上网寻求帮助

###进入Uboot并刷写系统（如果没有报错的话）1.固件下载，以下为我用openwrt.ai网站生成，你也可以试试或去自己找找入恩山论坛中 (emmc)[fast] nand
2.点击控制面板&#x3D;&gt;网络与 Internet&#x3D;&gt;网络与共享中心&#x3D;&gt;更改适配器设置&#x3D;&gt;WLAN&#x3D;&gt;属性&#x3D;&gt;Internet 协议版本 4(TCP&#x2F;IPv4)
3.点击使用以下 IP 地址(S):然后在IP 地址(I)刷入:192.168.1.100之后确认
4.之后一个网线连接Rax3000m的LAN口，另一边连接电脑网口,然后先个rax3000m断电，接着长接复位插电重启
5.在指示灯变成红色时松手不按复位，之后在浏览器输入192.168.1.1，选择你的固件并上传（如果失败了就换个固件，这个没事）,如果成功了rax3000m将自动重启，然后将第3步中的使用以下 IP 地址(S)更改为自动获取 IP 地址(O)以及使用以下的 DNS 服务器（E）改为 自动获取 DNS 服务器(B)
6.之后在浏览器输入10.0.0.1 密码为root之后就可以进入（如果你用我的固件的话）
救砖(如果接口被锡封了自己处理)1.准备 

TTL转USB调试工具
相对应的驱动（不一定要驱动）
PUTTY
WINSCP

2.将在背面标签的左下角与右下角的两螺丝钉拧下，然后打开
3.然后你会看到 
4.在PUTTYputty选择serial，serial lan（端口）填写就填你在设备管理端口里看到的（此电脑右键点击管理&#x3D;&gt;设备管理器&#x3D;&gt;端口），speed填115200，之后点击open
5.在显示root@(none)后输入
mount_root

6.然后输入：
passwd root 
更改root账户密码,要输入两遍确认且输入新密码的时候屏幕不显示输入信息
7.输入
bash ifconfig  
查看ip如果没有就输入
ifconfig eth0 0.0.0.0brctl addbr br-lanifconfig br-lan 192.168.1.1 netmask 255.255.255.0 upifconfig
查看ip应该就出来了
8.点击控制面板&#x3D;&gt;网络与 Internet&#x3D;&gt;网络与共享中心&#x3D;&gt;更改适配器设置&#x3D;&gt;WLAN&#x3D;&gt;属性&#x3D;&gt;Internet 协议版本 4(TCP&#x2F;IPv4)
9.点击使用以下 IP 地址(S):然后在IP 地址(I)刷入:192.168.1.100之后确认电脑IP改 192.168.1.100，网线连接路由器LAN口
10.打开WinSCP，选择SCP协议IP地址输入：192.168.1.1，开始链接，提示帐号密码，账号root，密码就之前设置的密码，登录后把目录换到tmp下面，emmc上传 mt7981_cmcc_rax3000m-fip-fixed-parts.bin ，nand上传mt7981_cmcc_rax3000m-fip-fixed-parts.bin uboot固件
11.在PUTTY输入：
mtd erase FIPmtd write /tmp/自己刚刚上传unoot文件 FIP mtd verify /tmp/mt7981_cmcc_rax3000m-fip-fixed-parts.bin FIP 

12.校验结果两行相同就可以拔电了，电脑IP不要动
13.按住重置按钮，上电，查看指示灯，变绿色松开，浏览器输入192.168.1.1  进入第三方UBOOT
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu  Samba 安装和配置</title>
    <url>/2025/08/24/9/</url>
    <content><![CDATA[安装1.安装smb服务，输入;
sudo apt update &amp;&amp; apt install samba

2.检查smb服务状态,输入:
systemctl status smbd --no-pager -l

3.设置smb开机自启动,输入:
systemctl is-enabled smbd# enable it if inactivesystemctl enable smbd

设置文件夹访问权限1.为确保smb用户能添加与删除文件，要设置权限，输入:
sudo chown -R yourusername:yourusername /data #你的共享路径sudo chmod -R 0755 /data #你的共享路径

配置smb用户与密码1.添加用户,输入
sudo usermod -aG sambashare [username]

2.设置密码,输入:
sudo smbpasswd -a [username]

3.创建共享
sudo nano /etc/samba/smb.conf
如果没有nano使用一下命令安装:
sudo apt update &amp;&amp; apt install nano

接着添加一下内容:
[public]comment = Shared Folderpath = /dataavailable = yesbrowseable = yespublic = yeswritable = yesvalid users = yourusernamecreate mask = 0644directory mask = 0755force create mode = 0644force directory mode = 0755

comment：共享文件夹的描述。
path：共享文件夹的路径。
available：是否允许访问。
browseable：是否在SMB浏览器中可见。
public：是否允许匿名访问。
writable：是否允许写入。
valid users：允许访问共享的用户。
create mask：新创建文件的权限。
directory mask：新创建文件夹的权限。

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>共享</tag>
      </tags>
  </entry>
</search>
