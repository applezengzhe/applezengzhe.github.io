<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安装搭建Hexo博客在Github Pager和Cloudflare并更换主题 完整指南</title>
    <url>/2024/12/22/3/</url>
    <content><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h2><ul>
<li><a href="https://github.com/">Github账号</a>(必须)</li>
<li><a href="https://dash.cloudflare.com/">Cloudflare账号</a>(必须)</li>
<li><a href="https://nodejs.org/en/">Node</a>(必须)</li>
<li><a href="https://git-scm.com/downloads/">Git</a>(必须)</li>
<li><a href="https://code.visualstudio.com/">VSCode</a>（建议,非必须）</li>
</ul>
<h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p>1.在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明Node安装成功。</p>
<p>2.Node换华为源(会快一点)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure>
<h1 id="正式配置"><a href="#正式配置" class="headerlink" title="正式配置"></a>正式配置</h1><h2 id="配置-Git-密钥并连接至-Github"><a href="#配置-Git-密钥并连接至-Github" class="headerlink" title="配置 Git 密钥并连接至 Github"></a>配置 Git 密钥并连接至 Github</h2><p>1.配置用户名和邮箱</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>之后通过通过git config -l 检查是否配置成功。</p>
<p>2.配置公钥连接Github</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>

<p>3.用记事本打开上述图片中的公钥id_rsa.pub，复制里面的内容，然后开始在github中配置ssh密钥。</p>
<p>4.进入github，点击右上角头像 选择settings，进入设置页后选择 SSH and GPG keys，名字随便起，公钥填到Key那一栏。</p>
<p>5.测试连接，输入以下命令（不要开stam++连接）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>第一次连接会提示Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?，输入yes即可<br>出现连接到账户的信息，说明已经大功告成。</p>
<h2 id="创建GitHub-io仓库"><a href="#创建GitHub-io仓库" class="headerlink" title="创建GitHub.io仓库"></a>创建GitHub.io仓库</h2><p>1.点击右上角的+按钮，选择New repository，创建一个&lt;用户名&gt;.github.io的仓库。</p>
<p>2.仓库名字的格式必须为：&lt;用户名&gt;.github.io (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</p>
<p>3.可见性必须选择 Public 方便第一次部署检查问题，点击 Creat repository 进行创建即可</p>
<h2 id="初始化-Hexo-博客"><a href="#初始化-Hexo-博客" class="headerlink" title="初始化 Hexo 博客"></a>初始化 Hexo 博客</h2><p>1.创建一个文件夹来保存博客源码（我这里选的路径为D:&#x2F;Hexo-Blog），在文件夹内右键鼠标，选择Open Git Bash here</p>
<p>2.在Git BASH输入如下命令安装 Hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure>
<p>安装完后输入hexo -v验证是否安装成功。</p>
<p>3.初始化 Hexo 项目安装相关依赖。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure>

<p>4.输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>
<p>启动项目,打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000</a> 当看到网站，就成功了</p>
<h2 id="将静态博客挂载到-GitHub-Pages"><a href="#将静态博客挂载到-GitHub-Pages" class="headerlink" title="将静态博客挂载到 GitHub Pages"></a>将静态博客挂载到 GitHub Pages</h2><p>1.安装 hexo-deployer-git</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>2.修改 _config.yml 文件在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为main代表主分支（注意缩进）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:applezengzhe/applezengzhe.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>3.修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</span><br></pre></td></tr></table></figure>
<p>如果出现Deploy done，则说明部署成功了。<br>稍等两分钟，打开浏览器访问：<a href="https://applezengzhe.github.io/">https://applezengzhe.github.io</a> ，这时候我们就可以看到博客内容了。</p>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>1.打开<a href="Hexo%E4%B8%BB%E9%A2%98%E7%BD%91%E7%AB%99">https://hexo.io/themes/</a>找到喜欢的主题打开github根据教程clone主题，或者将主题下载到本地hexo主题文件夹中进行使用。</p>
<p>2.以particlex为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-particlex/hexo-theme-particlex.git particlex --depth=1</span><br></pre></td></tr></table></figure>

<p>3.然后在根目录 _config.yml 设置主题为 ParticleX 即可。</p>
<ul>
<li>theme: particlex</li>
</ul>
<h2 id="部署到Cloudflare-Workers-和-Pages上"><a href="#部署到Cloudflare-Workers-和-Pages上" class="headerlink" title="部署到Cloudflare Workers 和 Pages上"></a>部署到Cloudflare Workers 和 Pages上</h2><p>1.登录Cloudflare后进入控制台页面</p>
<p>2.点击Workers 和 Pages然后创建应用程序</p>
<p>3.点击Pages，然后点击连接到 Git</p>
<p>4.输入你的github账号和密码，然后选择Hexo的仓库</p>
<p>5.构建配置中的构建命令输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo; hexo clean; hexo generate</span><br></pre></td></tr></table></figure>

<p>6.之后进入你创建的worker，点击自定义域名(要绑定在Cloudflare上的)(可选)</p>
<p>7.最后你就可以国内更稳定访问你的博客了，拜拜!!!(。・∀・)ノ</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>骁龙410随身WiFi刷入Debian 系统和救砖教程</title>
    <url>/2024/12/22/1/</url>
    <content><![CDATA[<h2 id="驱动与Debian"><a href="#驱动与Debian" class="headerlink" title="驱动与Debian"></a>驱动与Debian</h2><p>所需文件</p>
<ul>
<li><a href="https://www.123pan.com/s/7368Vv-3TyQh.html">高通 9008 驱动</a></li>
<li><a href="https://googledownloads.cn/android/repository/platform-tools-latest-windows.zip">ADB 工具</a></li>
<li><a href="https://www.123pan.com/s/7368Vv-hTyQh.html">Miko 备份工具</a></li>
<li><a href="https://www.123pan.com/s/XwVDVv-WICn3">Debian 刷机包</a></li>
<li><a href="https://www.123pan.com/s/NCtmjv-zRLav.html%E6%8F%90%E5%8F%96%E7%A0%81:1188">备份的全量包</a><br>如果不确定下载哪个，请先查看板子型号再下载刷机包。</li>
</ul>
<p>1.查看板子型号<br>用螺丝刀将随身 WiFi 的外壳拆开，查看板子上方的丝印，型号一般以 UFI、UZ 或 SP 开头。如红框中所示，此型号是 UFI003。</p>
<p>2.安装 9008 驱动<br>执行 driver.exe，并点击立即安装。在弹出如下窗口中，点击“安装”。</p>
<p>3.安装 ADB 工具<br>解压 platform-tools_r34.0.5-windows.zip</p>
<p>4.打开命令提示符，执行 adb version。如果出现</p>
<ul>
<li>Android Debug Bridge version 1.0.41</li>
<li>Version 34.0.5-10900879<br>即为正确</li>
</ul>
<p>5.安装 Miko 备份工具<br>解压 MiKo_Loder Pro.zip，运行 miko.exe 安装备份工具。安装完成后，桌面上会出现 Miko 备份工具的快捷方式。在图标上右键，打开文件所在位置，将解压得到的 Loader.exe 复制到 Miko 安装目录即可。</p>
<h2 id="开启-ADB"><a href="#开启-ADB" class="headerlink" title="开启 ADB"></a>开启 ADB</h2><p>1.将随身 WiFi 插入电脑 USB 接口。打开设备管理器，如果此时多了一个名叫 Android Composite ADB Interface 的设备，则表明随身 WiFi 已经开启 ADB，无需执行其他操作。<br>如果没有出现这个设备，则需要手动开启 ADB。以 UZ801 型号为例，连上随身 WiFi 的热点，并访问 <a href="http://192.168.100.1/usbdebug.html">http://192.168.100.1/usbdebug.html</a> 即可开启 ADB，再次访问即可关闭。</p>
<ul>
<li>提示</li>
<li>部分 UFI003 型号的随身 WiFi 默认不开 ADB，需要手动进 9008 模式刷入已开启 ADB 的安卓固件。</li>
<li><a href="https://www.123pan.com/s/NUK8Vv-nRdl%E6%8F%90%E5%8F%96%E7%A0%81%EF%BC%9A1LEW">固件下载</a></li>
</ul>
<p>2.手动进 9008 模式的方法：按住 reset 键不放（随身 WiFi 背面二维码右上角的小孔，用取卡针或牙签戳即可），并将随身 WiFi 插入电脑，松开 reset 键。</p>
<p>3.备份原厂固件<br>为避免刷错固件变砖等情况，强烈建议备份原厂固件。</p>
<p>4.打开命令提示符，执行 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb reboot edl</span><br></pre></td></tr></table></figure>
<p>，此时设备管理器中会多出高通 9008 设备。</p>
<p>5.我们运行上文所提到的 Loader.exe（即 Miko 工具）进行备份数据。</p>
<p>6.此时窗口右侧显示设备信息，表明随身 WiFi 已被成功识别。如果显示 Not Found 字样，请重新安装 9008 驱动并再次尝试。</p>
<p>7.依次点击 Read –&gt;Partition Backup&#x2F;Erase–&gt;Load Partition Structure。然后双击红色 Option 下面的灰条，选择备份目录，并点击 Read Full Image。再次选择备份目录，并取一个文件名，点击确定，即可开始备份。</p>
<p>8.等待几分钟，直到进度条达到 100%，右侧输出 Sucess 字样和用时，则表明备份完成 。</p>
<p>9.如果需要恢复备份，依次点击 Flash –&gt;emmc block0 flasher。然后双击 Emmc Data，选择之前备份的文件（.bin 格式），并点击下方 Flash 按钮，等待刷机完成即可。</p>
<h2 id="刷入-Debian"><a href="#刷入-Debian" class="headerlink" title="刷入 Debian"></a>刷入 Debian</h2><p>1.拔掉随身 WiFi 并重新插入 USB 接口，解压 Debian 刷机包。打开命令提示符，执行 adb reboot bootloader 进入 fastboot 模式。运行刷机包中的 flash.bat刷入系统，等待刷机完成。<br>输出 all done! 则表明刷机完成。</p>
<p>2.安装 RNDIS 网络驱动</p>
<ul>
<li>提示</li>
<li>如果设备管理器只显示 Android Device，右键更新驱动程序，依次选择 Microsoft - USB 移动宽带网络适配器，然后重新插入随身 WiFi，会出现一个未知设备，再根据下述步骤进行操作。</li>
<li>重新插入随身 WiFI，打开任务管理器，在其他设备中会出现一个未知设备或以 RNDIS 开头的设备。</li>
</ul>
<p>3.右键，更新驱动程序–&gt;浏览我的电脑以查找驱动程序–&gt;让我从计算机上的可用驱动程序列表中选取–&gt;显示所有设备，等待列表加载完成。</p>
<p>4.左侧选择 Microsoft，右侧选择 基于远程 NDIS 的 Internet 共享设备，在弹出窗口中选择是，并确定。<br>至此，RNDIS 驱动安装成功。</p>
<h2 id="连接随身-WiFi-终端"><a href="#连接随身-WiFi-终端" class="headerlink" title="连接随身 WiFi 终端"></a>连接随身 WiFi 终端</h2><p>1.驱动安装成功后，电脑上会多出一个名叫 4G_UFI_123456 的 NDIS 设备，同时会出现一个同名的热点，密码为 12345678。</p>
<p>2.Debian 默认用户名为 user，密码为 1，root 密码也为 1。请务必及时修改密码（命令：passwd）。</p>
<p>3.此时可以通过 adb 或 ssh 连接到 Debian 终端。</p>
<p>4.通过 adb 连接<br>将随身 WiFi 插入电脑 USB 接口，使用以下命令查看已连接 adb 设备：</p>
<ul>
<li>adb devices</li>
<li>List of devices attached</li>
<li>0123456789 device</li>
</ul>
<p>5.有新设备出现时，使用以下指令进入 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb shell</span><br></pre></td></tr></table></figure>

<p>6.通过 adb 连接时，使用 nmtui、htop 等需要显示图形的命令，可能会出现如下错误：<br>root@openstick:&#x2F;# nmtui<br>TERM environment variable needs set.<br>设置 TERM 环境变量即可解决。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> TERM=linux</span><br></pre></td></tr></table></figure>

<h2 id="通过-ssh-连接"><a href="#通过-ssh-连接" class="headerlink" title="通过 ssh 连接"></a>通过 ssh 连接</h2><p>1.将随身 WiFi 插入电脑 USB 接口或连接上随身 WiFi 的热点，使用以下指令进行连接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh root@192.168.68.1</span><br></pre></td></tr></table></figure>
<p>如果连不上说明系统还在启动，请稍后再试。</p>
<h2 id="随身-WiFi-联网"><a href="#随身-WiFi-联网" class="headerlink" title="随身 WiFi 联网"></a>随身 WiFi 联网</h2><p>此时随身 WiFi 并没有联网，必须要关闭热点才能连接 WiFi。下面介绍详细步骤。</p>
<p>1.首先打开命令提示符，执行 adb shell 进入 Debian 终端。然后设置 TERM 环境变量：export TERM&#x3D;linux。</p>
<p>2.执行 nmtui，选择“编辑连接”。</p>
<p>3.左侧使用方向键选择 bridge，右侧选择“编辑”。并回车。</p>
<p>4.删除其中的 wifi，并选择确定。。</p>
<p>5.返回，选择启用连接，则可连接 WiFi。</p>
<h2 id="优化系统"><a href="#优化系统" class="headerlink" title="优化系统"></a>优化系统</h2><p>1.删除无效软件包仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /etc/apt/sources.list.d/*</span><br></pre></td></tr></table></figure>

<p>2.删除多余软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt autopurge -y adoptopenjdk-8-hotspot</span><br></pre></td></tr></table></figure>

<p>3.更换软件源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF&gt; /etc/apt/sources.list</span></span><br><span class="line"><span class="string">deb http://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span></span><br><span class="line"><span class="string"># deb-src http://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span></span><br><span class="line"><span class="string"># deb-src http://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#deb http://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span></span><br><span class="line"><span class="string"># deb-src http://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span></span><br><span class="line"><span class="string"># deb-src http://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>4.更新软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade -y</span><br></pre></td></tr></table></figure>

<p>5.安装常用软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install -y nano curl</span><br></pre></td></tr></table></figure>

<p>6.删除软件包缓存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt clean</span><br></pre></td></tr></table></figure>
<h2 id="安装1Panel面板并换docker源-可选"><a href="#安装1Panel面板并换docker源-可选" class="headerlink" title="安装1Panel面板并换docker源(可选)"></a>安装1Panel面板并换docker源(可选)</h2><p>1.输入安装命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh</span><br></pre></td></tr></table></figure>
<p>2.根据提示输入安装位置，账号密码，端口号和安全入口</p>
<p>3.输入随身wifi IP:端口号&#x2F;安全入口，然后输入密码进入</p>
<p>4.点击应用市场&#x3D;&gt;已安装&#x3D;&gt;配置镜像加速可以解决镜像拉取失败的问题 快速跳转</p>
<p>5.根据提示配置镜像源
　</p>
<h2 id="关闭-LED-灯（可选）"><a href="#关闭-LED-灯（可选）" class="headerlink" title="关闭 LED 灯（可选）"></a>关闭 LED 灯（可选）</h2><p>1.随身 WiFi 开机后，LED 灯会不停地闪烁，如果不喜欢的话，执行以下命令即可关闭。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> none &gt; /sys/class/leds/blue:wifi/trigger</span><br><span class="line"><span class="built_in">echo</span> none &gt; /sys/class/leds/red:os/trigger</span><br></pre></td></tr></table></figure>
<p>执行后会立即生效。为避免重启后失效，建议设置开机自动执行。</p>
<p>2.编辑 &#x2F;etc&#x2F;rc.local 文件，并将以上两行命令添加到 exit 0 之前，并保存。-</p>
<h2 id="救砖"><a href="#救砖" class="headerlink" title="救砖"></a>救砖</h2><p>1.变砖后的棒子接入电脑直接进入9008模式,（如果没有可以尝试拆机按住reset键不动，再接入电脑）:</p>
<p>2.打开miko，分别点击Flash&gt;emmc block0 flasher&gt; Emmc Data&gt;FLASH!<br>如下选择就可以全量刷了，我当时用这个连分区表都恢复了</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>救砖</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>OPPO/真我手机 MTK强解BL锁</title>
    <url>/2024/12/22/2/</url>
    <content><![CDATA[<ul>
<li>我手上的手机是oppo reno5 pro，警告提前备份数据，一但变砖，本人概不负责</li>
</ul>
<h2 id="资源与文件"><a href="#资源与文件" class="headerlink" title="资源与文件"></a>资源与文件</h2><ul>
<li><a href="www.123865.com/s/rRU4Td-WiEMd">123盘</a> 提取码:1213</li>
<li><a href="wwi.lanzoup.com/i1KEp0toq8kd">dm模块(用于部分机型关闭dm校验)</a></li>
</ul>
<h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h2><p>1.安装python环境（Download Python | Python.org）记得勾选Add Python X.X to PATH</p>
<p>2.必要驱动</p>
<p>3.安装强解工具mtkclient</p>
<p>4.手机一定要降级到c11，因为c12及以后封了强解端口，不过好像可以拆机开端口，不过本人没有测试</p>
<h2 id="mtkclient配置："><a href="#mtkclient配置：" class="headerlink" title="mtkclient配置："></a>mtkclient配置：</h2><p>1.进入解压后的mtkclient文件夹</p>
<p>2.在此文件夹打开powershell</p>
<p>3.换清华或其他源（不一定，但会更快一些）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>

<p>4.安装mtkclient需要的第三方库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>

<h2 id="解锁bl锁："><a href="#解锁bl锁：" class="headerlink" title="解锁bl锁："></a>解锁bl锁：</h2><h3 id="解锁安卓10以下设备的bl锁："><a href="#解锁安卓10以下设备的bl锁：" class="headerlink" title="解锁安卓10以下设备的bl锁："></a>解锁安卓10以下设备的bl锁：</h3><p>1.先将设备关机</p>
<p>2.在powershell里输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python mtk da seccfg unlock</span><br></pre></td></tr></table></figure>

<p>3.按住电源键+音量上下键，进入深刷模式，第一次会自动安装驱动，等待进度条完毕</p>
<p>4.如果重启出现：</p>
<ul>
<li>Your device has been unlocked and can’t be trusted.</li>
<li>Your device will boot in 5 seconds.<br>就解锁完毕</li>
</ul>
<p>5.此时可能无法启动手机，一直让它开机进入rec模式（大约半个小时），如果不行手动进入rec模式</p>
<p>6.直接清除数据分区，然后重启</p>
<h3 id="解锁安卓11以上设备bl锁："><a href="#解锁安卓11以上设备bl锁：" class="headerlink" title="解锁安卓11以上设备bl锁："></a>解锁安卓11以上设备bl锁：</h3><p>1.备份lk（因为安卓11之后有dm校验，又把它藏在了lk分区里）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python mtk r lk,lk2 lk.bin,lk2.bin</span><br></pre></td></tr></table></figure>
<p>（网上看自己有几个lk分区，不要找着抄）</p>
<p>2.备份后自己重名后缀，例如我有两个lk分区：lk.base,lk2.base</p>
<p>3.下载我提供的lk文件</p>
<p>4.刷入我提供的lk文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python mtk w lk,lk2 lk.bin,lk.bin</span><br></pre></td></tr></table></figure>

<p>5.强解bl锁：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python mtk da seccfg unlock</span><br></pre></td></tr></table></figure>

<p>6.此时你可能像我手机变成一块黑砖，不用慌，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python mtk w lk,lk2 lk.base,lk2.base</span><br></pre></td></tr></table></figure>

<p>刷如原厂lk文件，重新按住电源键+音量上+音量下，等到重新进入深刷模式</p>
<p>7.按一下电源键 如果看到了</p>
<ul>
<li>Your device has been unlocked and can’t be trusted.</li>
<li>Your device will boot in 5 seconds.<br>就成功了，不过之后重启可能像我的手机一样要再按一次电源键</li>
</ul>
<p>8.此时可能无法启动手机，一直让它开机进入rec模式（大约半个小时，如果不行手动进入rec模式</p>
<p>9.清除数据分区，然后重启</p>
<h2 id="Root手机："><a href="#Root手机：" class="headerlink" title="Root手机："></a>Root手机：</h2><p>1.重新进入深刷模式，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python mtk r boot boot.img</span><br></pre></td></tr></table></figure>

<p>提取boot分区，因为boot分区不对可能会掉wifi</p>
<p>2.安装面具</p>
<p>3.修补boot镜像，不要开修补vbmeta</p>
<p>4.重新进入深刷模式，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python mtk w boot 你修补的镜像</span><br></pre></td></tr></table></figure>

<p>5.不出意外应当后成功root了(如果升级c12，可以用官方升级工具，之后找到升级包，获得boot，修补之后fastbootd刷入)</p>
<h2 id="五-去除dm检验"><a href="#五-去除dm检验" class="headerlink" title="五.去除dm检验"></a>五.去除dm检验</h2><p>1.用软件提取vbmeta.img<br>2.进入fastbootd 之后输入:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot --disable-verity --disable-verification flash vbmeta vbmeta.img</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>强解</tag>
        <tag>Root</tag>
        <tag>安卓</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑安装Android X86和Windows双系统</title>
    <url>/2025/01/22/5/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="文件准备"><a href="#文件准备" class="headerlink" title="文件准备"></a>文件准备</h2><ul>
<li><a href="https://www.android-x86.org/">Android X86镜像获取</a></li>
<li><a href="https://www.ventoy.net/en/download.html">刷写工具ventoy</a></li>
<li><a href="https://www.diskgenius.cn/download.php">分区工具DiskGenius</a></li>
<li><a href="https://sourceforge.net/projects/grub2win/">Android X86引导 Grub2Win</a></li>
<li><a href="https://sourceforge.net/projects/subproject.grub2win.p/">AutoUpdate</a></li>
</ul>
<h2 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h2><p>1.将下载后的ventoy解压，然后点击Ventoy2Disk.exe(记得插入U盘)，然后点击安装</p>
<p>2.在进度条走完后，将下载后的Android X86进入拖入U盘</p>
<p>3.打开DiskGenius，分出一块空间给安卓系统使用(建议大于20G)</p>
<p>4.解压GrubWin后双击安装</p>
<p>5.如果安装不成功把AutoUpdate后缀名改为7z，解压并点击setup.bat</p>
<p>6.之后安装GrubWin</p>
<h1 id="正式教程"><a href="#正式教程" class="headerlink" title="正式教程"></a>正式教程</h1><h2 id="使用U盘安装Android-X86系统"><a href="#使用U盘安装Android-X86系统" class="headerlink" title="使用U盘安装Android X86系统"></a>使用U盘安装Android X86系统</h2><p>1.进入本机的BIOS(如果你这个不知道建议退出本教程),改为U盘启动</p>
<p>2.重启进入U盘后，选择第一项可以先试用安卓系统，如果行再进行小一步</p>
<p>3.重新启动后选择第三项，进行安装</p>
<p>4.选择你专门分给安卓的分区,然后选择ntfs的格式化并确认</p>
<p>5.选择安装GRUB(双系统启动项),如果出现Warning，再次选择Yes(之后在Windows解决启动问题)</p>
<p>6.下一步是root(发烧友都懂)，选择Yes，方便安装arm兼容库</p>
<p>7.之后等一俩分钟,之后选择Yes，创建空间存储用户数据，按照你之前分区空间的储存输入安卓的储存空间</p>
<p>8.然后选择Reboot</p>
<h2 id="创建Android-X86引导"><a href="#创建Android-X86引导" class="headerlink" title="创建Android X86引导"></a>创建Android X86引导</h2><p>1.打开GrubWin，点击Manage Boot Menu</p>
<p>2.点击Add A New Entry(添加启动项)</p>
<p>3.Type选择android，Select A New Kernel File选择安卓分区中的android-XX-XX文件夹中的kernel并选择</p>
<p>4.把安卓启动项改为第二个</p>
<h2 id="配置Android-X86"><a href="#配置Android-X86" class="headerlink" title="配置Android X86"></a>配置Android X86</h2><p>1.重启后选择安卓的启动项</p>
<p>2.先改ENGLISH语言为简体中文，然后选择中国</p>
<p>3.点击开始，然后连接网络，台式机不用配置继续</p>
<p>4.检查更新等它自己过，然后选择使用新设置，再设置你的时区，下一步，同意</p>
<p>5.点击Launcher3桌面并设置始终</p>
<h2 id="安装Android-X86-arm兼容库"><a href="#安装Android-X86-arm兼容库" class="headerlink" title="安装Android X86 arm兼容库"></a>安装Android X86 arm兼容库</h2><p>1.点击设置，开启兼容选项</p>
<p>2.打开终端模拟器输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su</span><br><span class="line">enable_nativebridge</span><br></pre></td></tr></table></figure>

<p>3.等待下载完毕</p>
<p>4.总结Android X86兼容性不是很好，可以安装一下电视软件玩玩，但还不如安卓模拟器，未来可期</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>安卓</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑如何重装Windows系统</title>
    <url>/2025/01/23/7/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><ul>
<li><a href="https://github.com/c0re100/qBittorrent-Enhanced-Edition/releases">bt下载器qbittorrent增强版</a></li>
<li>windwos镜像<a href="https://msdn.itellyou.cn/">msdn</a>，<a href="https://hellowindows.cn/">hellowindwos</a></li>
<li><a href="https://www.wepe.com.cn/download.html">微PE</a></li>
<li>你的Windwos驱动，自己去官网找(如果找不到就可以安装驱动安装软件，如:驱动人生，但下载一般较慢，还可能不适配)</li>
</ul>
<h2 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h2><p>1.安装qbittorrent后复制windwos镜像站的bt下载链接下载</p>
<p>2.在插入U盘，打开微PE安装，安装成功后Windwos镜像拖入U盘</p>
<p>3.重启电脑进入bios(如果不知道可以去网上查查，一般为Delete)</p>
<p>4.设置U盘为第一启动项</p>
<p>5.重启进入微PE，后打开DiskGenius，进行分区然后创建ESP&#x2F;MSR分区，如果有就不用了</p>
<p>6.打开Dism++，恢复功能&#x3D;&gt;还原系统，目标镜像路径为你的Windwos镜像，然后选择你的目标镜像版本，安装位置选你分的区域，记得勾选格式化，Compact，添加引导</p>
<p>7.引导为你的ESP分区</p>
<p>8.之后拔U盘重启应该就可以了进入系统，然后自己进行配置</p>
<p>9.进入系统后打开你的驱动文件，进行安装</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>gmg光猫开Telnet,获得超级管理员密码,改桥接</title>
    <url>/2024/12/31/4/</url>
    <content><![CDATA[<h2 id="记录关键参数"><a href="#记录关键参数" class="headerlink" title="记录关键参数"></a>记录关键参数</h2><p>1.从WAN设置页，记下拨号帐号</p>
<p>2.如果不知道拨号密码可以问师傅或去移动官网改密码</p>
<p>3.WAN设置里INTERNET一项对应的VID</p>
<p>4.ONT认证密码。在登录页面右键，浏览页面源代码，搜索 LOID，把var pwd &#x3D; “——————“;记录下来</p>
<h2 id="获取管理员密码"><a href="#获取管理员密码" class="headerlink" title="获取管理员密码"></a>获取管理员密码</h2><ul>
<li>谨慎操作，很容易无法上网，如不能接受请退出</li>
</ul>
<p>1.捅光猫复位键，45～60秒。</p>
<p>2.打开登录页面，用管理员帐号CMCCAdmin和初始密码aDm8H%MdA登录进去。</p>
<p>3.在登陆光猫后<a href="http://192.168.1.1/getpage.gch?pid=1002&nextpage=tele_sec_tserver_t.gch">在此页面</a> 开启telnet，保存</p>
<p>4.退出登录，到主页“注册安装”，填入ONT密码，操作业务下发</p>
<p>5.下发完成后，现在可以正常上网了</p>
<p>6.使用windows自带的telnet或其他telnet工具连接到光猫，登录用户CMCCAdmin，密码输入光猫反面写的user密码加上@C1，如xxxxxxxx@C1。（如果不对请尝试省份首字母，比如@BJ）<br>待出现~$符号后，输入sidbg 1 DB p DevAuthInfo，超级密码一目了然。</p>
<h2 id="设置桥接"><a href="#设置桥接" class="headerlink" title="设置桥接"></a>设置桥接</h2><ul>
<li>部分地区可能需要删掉TR069才能正常使用，用F12法或者TELNET指令法。请自行删除。</li>
</ul>
<p>1.打开光猫网络标签页</p>
<p>2.在连接名称选择Internet_XXX这一项</p>
<p>3.点击删除</p>
<p>4.重新添加一个 Inetrnet</p>
<p>5.IP协议版本选择 IPv4&#x2F;v6</p>
<p>6.模式选择 桥接</p>
<p>7.端口绑定选择需要的LAN口</p>
<p>8.VLAN ID 填写之前抄</p>
<p>9.点击保存</p>
<h2 id="设置路由器"><a href="#设置路由器" class="headerlink" title="设置路由器"></a>设置路由器</h2><p>1.加入路由器后台</p>
<p>2.点击网络</p>
<p>3.写入自己的拨号账号和密码</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>光猫</tag>
        <tag>网络</tag>
        <tag>桥接</tag>
      </tags>
  </entry>
  <entry>
    <title>广东爱家TV(E900V22C-b)刷入ATV</title>
    <url>/2025/01/22/6/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li><a href="https://www.123865.com/s/rRU4Td-CikMd">ATV固件</a>提取码:1213，E900V22C-a或b都可以</li>
<li>一个U盘</li>
</ul>
<h1 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h1><p>1.把ATV固件放入U盘根目录</p>
<p>2.打开电视盒子并遥控器狂按右键</p>
<p>3.不出意外的话你的电视就开始升级了</p>
<h1 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h1><p>1.自带root<br>2.不杀后台</p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>1.由于是移动端移植，不支持语音和一些按键不支持<br>2.wifi adb 需要拔网线连接wifi，不那么好用</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>安卓</tag>
        <tag>TV</tag>
      </tags>
  </entry>
  <entry>
    <title>rax3000m 刷机以及救砖</title>
    <url>/2025/07/14/8/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>由于这款机子经过多次优化，而且有多个版本需要不通的方法刷入uboot，所以我将分不同的版本来写，可自行跳转至自己的版本刷入uboot</p>
<h3 id="确认版本"><a href="#确认版本" class="headerlink" title="确认版本"></a>确认版本</h3><p>一.判断自己是EMMC还是NAND</p>
<p>1.看自己机子的背面，如果有CH  EC那就是EMMC版，而如果只有CH那就是NAND版（当然也不绝对，但大多数是这样）</p>
<p>2.如果你不放心，可以拆开，其中两螺丝钉在背面标签的左下角与右下角，拧下后看PCB号</p>
<ul>
<li>128M SPI-NAND版（PCB号：RAX3000M_D4_PCB_P3，生产批次20230515, 20230606 和 20231027）</li>
<li>64G EMMC版（PCB号：RAX3000M_D4_SL_P1，生产批次20230626）</li>
</ul>
<p>二.看生产日期</p>
<p>1.如果为 20230606及以前则没有加密</p>
<p>2.如果为 20230606到20240115则已经加密</p>
<p>3.如果为 20240115或202401017则需要特别的方法</p>
<h2 id="不同版本进入终端方法"><a href="#不同版本进入终端方法" class="headerlink" title="不同版本进入终端方法"></a>不同版本进入终端方法</h2><h3 id="20230606及以前-和-20230606到20240115进入终端"><a href="#20230606及以前-和-20230606到20240115进入终端" class="headerlink" title="20230606及以前 和 20230606到20240115进入终端"></a>20230606及以前 和 20230606到20240115进入终端</h3><p>一.进入网页端管理页面中点击更多，然后再点击管理页面</p>
<p>二.点击配置管理并点击导出文件来来下载 cfg_export_config_file.conf</p>
<p>三.上传文件到 Linux系统（WSL）也可以</p>
<p>四.解压配置文件</p>
<ul>
<li><p>如果你是20230606及以前生产的，在linux命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvzf cfg_export_config_file.conf </span><br></pre></td></tr></table></figure>
</li>
<li><p>如果你是20230606到20240115生产的，在linux命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl aes-256-cbc -d -pbkdf2 -k <span class="variable">$CmDc</span>#RaX30O0M@\!$ -<span class="keyword">in</span> cfg_export_config_file.conf -out - | tar -zxvf -</span><br></pre></td></tr></table></figure>
<p>然后你将要获得一个etc文件夹</p>
</li>
</ul>
<p>五.修改配置文件<br>1.在命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/shadow</span><br></pre></td></tr></table></figure>
<p>2.然后在第一行的root后面删除两个冒号（以在ssh进入系统时不用root密码）让后按照按Esc，之后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wq!</span><br></pre></td></tr></table></figure>
<p>回车保存</p>
<p>2.1.在命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/config/dropbear</span><br></pre></td></tr></table></figure>
<p>在第二行把option enaber ‘0’ 改为option enaber ‘1’ 开启ssh</p>
<p>六.重新加密配置文件</p>
<ul>
<li><p>如果你是20230606及以前生产的，在linux命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zcvf  cfg_export_config_file_new.conf etc</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果你是20230606到20240115生产的，在linux命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zcvf - etc | openssl aes-256-cbc -pbkdf2 -k <span class="variable">$CmDc</span>#RaX30O0M@\!$ -out cfg_export_config_file_new.conf</span><br></pre></td></tr></table></figure>
<p>七.导入配置并进入ssh<br>1.回到配置管理并点击导入配置文件，将我们的cfg_export_config_file_new.conf文件上传，之后就可以使用<a href="https://mobaxterm.mobatek.net/download-home-edition.html">mobaxterm</a>点击Session，然后点击SSH，在Remote host *中输入192.168.10.1(rax000m的ip)，Specify username中输入root，在点击ok，即可进入ssh</p>
</li>
</ul>
<h3 id="20240115-进入终端"><a href="#20240115-进入终端" class="headerlink" title="20240115 进入终端"></a>20240115 进入终端</h3><ul>
<li>由于机子是新固件，新密码是根据SN生成的，所以每台机子不一样，而且新版原厂固件已经删除了dropbear，开不了SSH，所以我们将使用telnet的配置备份文件<br>一.进入网页端管理页面中点击更多，然后再点击管理页面</li>
</ul>
<p>二.点击配置管理并点击导出文件来来下载 cfg_export_config_file.conf</p>
<p>三.使用openwrt、ubuntu、WSL等linux系统或<a href="https://cygwin.com/install.html">Cygwin</a></p>
<p>四.输入在文件所在的目录打开命令窗口输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SN=123456789123456(在机子背面S/N:后的)</span><br><span class="line">mypassword=$(openssl passwd -1 -salt aV6dW8bD <span class="string">&quot;<span class="variable">$SN</span>&quot;</span>)</span><br><span class="line">mypassword=$(<span class="built_in">eval</span> <span class="string">&quot;echo <span class="variable">$mypassword</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$mypassword</span></span><br><span class="line">openssl aes-256-cbc -pbkdf2 -k <span class="string">&quot;<span class="variable">$mypassword</span>&quot;</span> -<span class="keyword">in</span> RAX3000M_XR30_cfg-telnet-20240117.conf -out cfg_import_config_file_new.conf</span><br></pre></td></tr></table></figure>

<p>五.导入配置并进入ssh<br>1.回到配置管理并点击导入配置文件，将我们的cfg_export_config_file_new.conf文件上传，之后就可以使用<a href="https://mobaxterm.mobatek.net/download-home-edition.html">mobaxterm</a>点击Session&#x3D;&gt;Telnet，在Remote host *中输入192.168.10.1(rax000m的ip)，Specify username中输入root，在点击ok，即可进入ssh</p>
<h3 id="20241017-ttl进入终端其他版本也通用"><a href="#20241017-ttl进入终端其他版本也通用" class="headerlink" title="20241017 ttl进入终端其他版本也通用"></a>20241017 ttl进入终端其他版本也通用</h3><p>1.准备 </p>
<ul>
<li>TTL转USB调试工具</li>
<li>相对应的驱动（不一定要驱动）</li>
<li><a href="https://www.putty.org/">PUTTY</a></li>
</ul>
<p>2.将在背面标签的左下角与右下角的两螺丝钉拧下，然后打开</p>
<p>3.然后你会看到 <img src="https://fast-tk.jxqf.dpdns.org/8_post/ttl.jpg" alt="这是图片" title="Magic Gardens"></p>
<p>4.在PUTTYputty选择serial，serial lan（端口）填写就填你在设备管理端口里看到的（此电脑右键点击管理&#x3D;&gt;设备管理器&#x3D;&gt;端口），speed填115200，之后点击open</p>
<p>5.在显示root@(none)后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount_root</span><br><span class="line">sed -i <span class="string">&#x27;s/.*local debug=.*/\tlocal debug=1/&#x27;</span> /etc/init.d/telnet</span><br></pre></td></tr></table></figure>

<p>6.之后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure>
<p>改密码</p>
<p>6.接着写你要的root密码因为是linux所以不显示你输入的密码</p>
<p>7.之后就可以使用<a href="https://mobaxterm.mobatek.net/download-home-edition.html">mobaxterm</a>点击Session&#x3D;&gt;Telnet，在Remote host *中输入192.168.10.1(rax000m的ip)，Specify username中输入root，在点击ok，密码写你自己设置的，即可进入ssh</p>
<h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><ul>
<li><p>如果为emmc 输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p1 of=/mnt/mmcblk0p12/mmcblk0p1.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p2 of=/mnt/mmcblk0p12/mmcblk0p2.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p3 of=/mnt/mmcblk0p12/mmcblk0p3.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p4 of=/mnt/mmcblk0p12/mmcblk0p4.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p5 of=/mnt/mmcblk0p12/mmcblk0p5.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p6 of=/mnt/mmcblk0p12/mmcblk0p6.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p7 of=/mnt/mmcblk0p12/mmcblk0p7.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p8 of=/mnt/mmcblk0p12/mmcblk0p8.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p9 of=/mnt/mmcblk0p12/mmcblk0p9.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p10 of=/mnt/mmcblk0p12/mmcblk0p10.bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mmcblk0p11 of=/mnt/mmcblk0p12/mmcblk0p11.bin</span><br></pre></td></tr></table></figure>
<p>然后复制拖到电脑，进行备份文件</p>
</li>
<li><p>如果为nand 输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd0 | gzip &gt;/tmp/mtd0_spi0.0.bin.gz</span><br><span class="line"><span class="built_in">cd</span>  /tmp  进入到tmp目录</span><br><span class="line">把 mtd0_spi0.0.bin.gz</span><br><span class="line"><span class="built_in">rm</span>  -rf  mtd0_spi0.0.bin.gz </span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd1 of=/tmp/mtd1_BL2.bin</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd2 of=/tmp/mtd2_u-boot-env.bin</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd3 of=/tmp/mtd3_Factory.bin</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd4 of=/tmp/mtd4_mtd4_FIP.bin</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd5 of=/tmp/mtd5_ubi.bin</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd6 of=/tmp/mtd6_plugins.bin</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd7 of=/tmp/mtd7_fwk.bin</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/mtd8 of=/tmp/mtd8_fwk2.bin</span><br></pre></td></tr></table></figure>
<p>然后复制拖到电脑，进行备份文件</p>
</li>
</ul>
<h3 id="安装Uboot"><a href="#安装Uboot" class="headerlink" title="安装Uboot"></a>安装Uboot</h3><p>1.下载Hanwckf的<a href="https://github.com/hanwckf/bl-mt798x/releases">uboot</a>并解压</p>
<ul>
<li><p>nand留下mt7981_cmcc_rax3000m-fip-fixed-parts.bin</p>
</li>
<li><p>emmc留下mt7981_cmcc_rax3000m-emmc-fip.bin</p>
</li>
</ul>
<p>2.将文件上传到&#x2F;tmp路径然后nand输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mtd write /tmp/mt7981_cmcc_rax3000m-fip-fixed-parts.bin</span><br></pre></td></tr></table></figure>
<p>而emmc输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/tmp/mt7981_cmcc_rax3000m-emmc-fip.bin of=/dev/mmcblk0p3</span><br><span class="line"><span class="built_in">sync</span></span><br></pre></td></tr></table></figure>
<ul>
<li>特别提醒，如果报错了千万不要重启，不然砖一个给你看看，马上上网寻求帮助</li>
</ul>
<p>###进入Uboot并刷写系统（如果没有报错的话）<br>1.固件下载，以下为我用openwrt.ai网站生成，你也可以试试或去自己找找入恩山论坛中 (emmc)[<a href="https://fast-tk.jxqf.dpdns.org/8_post/emmc.bin">fast</a>] <a href="https://fast-tk.jxqf.dpdns.org/8_post/nand.bin">nand</a></p>
<p>2.点击控制面板&#x3D;&gt;网络与 Internet&#x3D;&gt;网络与共享中心&#x3D;&gt;更改适配器设置&#x3D;&gt;WLAN&#x3D;&gt;属性&#x3D;&gt;Internet 协议版本 4(TCP&#x2F;IPv4)</p>
<p>3.点击使用以下 IP 地址(S):然后在IP 地址(I)刷入:192.168.1.100之后确认</p>
<p>4.之后一个网线连接Rax3000m的LAN口，另一边连接电脑网口,然后先个rax3000m断电，接着长接复位插电重启</p>
<p>5.在指示灯变成红色时松手不按复位，之后在浏览器输入192.168.1.1，选择你的固件并上传（如果失败了就换个固件，这个没事）,如果成功了rax3000m将自动重启，然后将第3步中的使用以下 IP 地址(S)更改为自动获取 IP 地址(O)以及使用以下的 DNS 服务器（E）改为 自动获取 DNS 服务器(B)</p>
<p>6.之后在浏览器输入10.0.0.1 密码为root之后就可以进入（如果你用我的固件的话）</p>
<h3 id="救砖-如果接口被锡封了自己处理"><a href="#救砖-如果接口被锡封了自己处理" class="headerlink" title="救砖(如果接口被锡封了自己处理)"></a>救砖(如果接口被锡封了自己处理)</h3><p>1.准备 </p>
<ul>
<li>TTL转USB调试工具</li>
<li>相对应的驱动（不一定要驱动）</li>
<li><a href="https://www.putty.org/">PUTTY</a></li>
<li><a href="https://winscp.net/eng/index.php">WINSCP</a></li>
</ul>
<p>2.将在背面标签的左下角与右下角的两螺丝钉拧下，然后打开</p>
<p>3.然后你会看到 <img src="https://fast-tk.jxqf.dpdns.org/8_post/ttl.jpg" alt="这是图片" title="Magic Gardens"></p>
<p>4.在PUTTYputty选择serial，serial lan（端口）填写就填你在设备管理端口里看到的（此电脑右键点击管理&#x3D;&gt;设备管理器&#x3D;&gt;端口），speed填115200，之后点击open</p>
<p>5.在显示root@(none)后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount_root</span><br></pre></td></tr></table></figure>

<p>6.然后输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd root </span><br></pre></td></tr></table></figure>
<p>更改root账户密码,要输入两遍确认且输入新密码的时候屏幕不显示输入信息</p>
<p>7.输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash ifconfig  </span><br></pre></td></tr></table></figure>
<p>查看ip如果没有就输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 0.0.0.0</span><br><span class="line">brctl addbr br-lan</span><br><span class="line">ifconfig br-lan 192.168.1.1 netmask 255.255.255.0 up</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
<p>查看ip应该就出来了</p>
<p>8.点击控制面板&#x3D;&gt;网络与 Internet&#x3D;&gt;网络与共享中心&#x3D;&gt;更改适配器设置&#x3D;&gt;WLAN&#x3D;&gt;属性&#x3D;&gt;Internet 协议版本 4(TCP&#x2F;IPv4)</p>
<p>9.点击使用以下 IP 地址(S):然后在IP 地址(I)刷入:192.168.1.100之后确认电脑IP改 192.168.1.100，网线连接路由器LAN口</p>
<p>10.打开WinSCP，选择SCP协议<br>IP地址输入：192.168.1.1，开始链接，提示帐号密码，账号root，密码就之前设置的密码，登录后把目录换到tmp下面，emmc上传 mt7981_cmcc_rax3000m-fip-fixed-parts.bin ，nand上传mt7981_cmcc_rax3000m-fip-fixed-parts.bin <a href="https://github.com/hanwckf/bl-mt798x/releases">uboot固件</a></p>
<p>11.在PUTTY输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mtd erase FIP</span><br><span class="line">mtd write /tmp/自己刚刚上传unoot文件 FIP </span><br><span class="line">mtd verify /tmp/mt7981_cmcc_rax3000m-fip-fixed-parts.bin FIP </span><br></pre></td></tr></table></figure>

<p>12.校验结果两行相同就可以拔电了，电脑IP不要动</p>
<p>13.按住重置按钮，上电，查看指示灯，变绿色松开，浏览器输入192.168.1.1  进入第三方UBOOT</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>刷机</tag>
        <tag>路由器</tag>
      </tags>
  </entry>
</search>
